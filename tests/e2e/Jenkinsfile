node('docker'){
    stage "Container Prep"
        def mycontainer = docker.image('elastest/ci-docker-compose-py-siblings:latest')
        mycontainer.pull() // make sure we have the latest available from Docker Hub

        mycontainer.inside("-u jenkins -v /var/run/docker.sock:/var/run/docker.sock:rw") {

            git 'https://github.com/elastest/elastest-service-manager'

            stage ("ESM Service"){

                try {
                   sh "docker rm -f esm_e2e"
                } catch(e) {
                   echo "Error: $e"
                }

                sh "docker network create elastest_elastest"
                sh "docker network list"
                
                sh "docker-compose -f tests/e2e/docker-compose.yml down -v"
                echo ("Starting ESM service...")
                sh "docker-compose -f tests/e2e/docker-compose.yml up -d"
            }
            stage ("ESM E2E Test"){
                esmIP = sh (
                     script: 'docker inspect --format=\\"{{.NetworkSettings.Networks.e2e_elastest_elastest.IPAddress}}\\" esm',
                     returnStdout: true
                 ).trim()
                esmIP = esmIP.substring(1, esmIP.length()-1)
                echo "ESM container IP=${esmIP}"
                sleep 20
                sh "docker run -t --name esm_e2e --network e2e_elastest_elastest -e ESM_EP_IP=${esmIP} dizz/esm_e2e:latest"
            }

            stage ("ESM E2E cleanup"){
                // step([$class: 'JUnitResultArchiver', testResults: '**/nosetests.xml'])
                sh "docker logs esm_e2e"
                sh "docker rm -f esm_e2e"
                sh "docker-compose -f tests/e2e/docker-compose.yml logs"
                sh "docker-compose -f tests/e2e/docker-compose.yml down -v"
                sh "docker network rm elastest_elastest"
            }
        }
}
